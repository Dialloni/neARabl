{"ast":null,"code":"var _jsxFileName = \"/Users/abubakardiallo/Desktop/neARable/nearable/src/pages/VisualizationPage.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Register required components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst VisualizationPage = ({\n  data\n}) => {\n  // Calculate the number of people per state\n  const stateCounts = data.reduce((acc, item) => {\n    acc[item.state] = (acc[item.state] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Prepare chart data\n  const chartData = {\n    labels: Object.keys(stateCounts),\n    // State names\n    datasets: [{\n      label: 'Number of People',\n      data: Object.values(stateCounts),\n      // Number of people per state\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'People Distribution Across States'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"visualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"People Distribution Across States\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_c = VisualizationPage;\nexport default VisualizationPage;\nvar _c;\n$RefreshReg$(_c, \"VisualizationPage\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","VisualizationPage","data","stateCounts","reduce","acc","item","state","chartData","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","chartOptions","responsive","plugins","legend","position","title","display","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["/Users/abubakardiallo/Desktop/neARable/nearable/src/pages/VisualizationPage.tsx"],"sourcesContent":["import React from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Register required components\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\ninterface VisualizationPageProps {\n    data: any[];\n}\n\nconst VisualizationPage: React.FC<VisualizationPageProps> = ({ data }) => {\n    // Calculate the number of people per state\n    const stateCounts = data.reduce((acc: { [key: string]: number }, item: any) => {\n        acc[item.state] = (acc[item.state] || 0) + 1;\n        return acc;\n    }, {});\n\n    // Prepare chart data\n    const chartData = {\n        labels: Object.keys(stateCounts), // State names\n        datasets: [\n            {\n                label: 'Number of People',\n                data: Object.values(stateCounts), // Number of people per state\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\n                borderColor: 'rgba(75, 192, 192, 1)',\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    const chartOptions = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top' as const,\n            },\n            title: {\n                display: true,\n                text: 'People Distribution Across States',\n            },\n        },\n    };\n\n    return (\n        <div className=\"visualization\">\n            <h2>People Distribution Across States</h2>\n            <Bar data={chartData} options={chartOptions} />\n        </div>\n    );\n};\n\nexport default VisualizationPage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAT,OAAO,CAACU,QAAQ,CAACT,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAMhF,MAAMK,iBAAmD,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACtE;EACA,MAAMC,WAAW,GAAGD,IAAI,CAACE,MAAM,CAAC,CAACC,GAA8B,EAAEC,IAAS,KAAK;IAC3ED,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAACF,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;IAC5C,OAAOF,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAMG,SAAS,GAAG;IACdC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACR,WAAW,CAAC;IAAE;IAClCS,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,kBAAkB;MACzBX,IAAI,EAAEQ,MAAM,CAACI,MAAM,CAACX,WAAW,CAAC;MAAE;MAClCY,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;EAED,MAAMC,YAAY,GAAG;IACjBC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,QAAQ,EAAE;MACd,CAAC;MACDC,KAAK,EAAE;QACHC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EAED,oBACI1B,OAAA;IAAK2B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1B5B,OAAA;MAAA4B,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1ChC,OAAA,CAACF,GAAG;MAACK,IAAI,EAAEM,SAAU;MAACwB,OAAO,EAAEd;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEd,CAAC;AAACE,EAAA,GAxCIhC,iBAAmD;AA0CzD,eAAeA,iBAAiB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}